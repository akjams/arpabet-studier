{"version":3,"sources":["words.ts","util.ts","assets/correct.png","assets/incorrect.png","Quiz.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["words","cmuSuffixes","phonesForWord","word","result","map","suffix","forEach","key","dictEntry","dictionary","undefined","push","stripAccent","phones","replace","quizWordIndex","Math","floor","random","length","getNextQuizWord","getNextQuizWordThatHasPhones","candidate","Quiz","props","onChangeGuess","e","setState","guess","target","value","toUpperCase","handleSubmit","preventDefault","answers","quizWord","isCorrect","includes","state","onClickNext","onNext","document","getElementById","focus","renderAnswers","icon","incorrectIcon","alt","correctIcon","id","src","ans","render","className","onSubmit","autoFocus","onChange","type","onClick","React","PureComponent","App","onNextWord","newQuizWord","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"0PAAaA,EAAQ,CACnB,cACA,eACA,iBACA,aACA,WACA,UACA,gBACA,YACA,YACA,aACA,QACA,YACA,UACA,UACA,SACA,aACA,SACA,UACA,QACA,cACA,QACA,iBACA,UACA,YACA,WACA,UACA,cACA,YACA,eACA,SACA,QACA,WACA,cACA,SACA,YACA,WACA,aACA,eACA,aACA,aACA,YACA,aACA,YACA,WACA,gBACA,QACA,OACA,WACA,YACA,UACA,SACA,cACA,QACA,cACA,SACA,eACA,aACA,cACA,QACA,eACA,eACA,YACA,eACA,iBACA,YACA,aACA,YACA,aACA,aACA,YACA,YACA,WACA,YACA,eACA,iBACA,YACA,UACA,YACA,WACA,OACA,OACA,YACA,gBACA,mBACA,aACA,YACA,oBACA,qBACA,cACA,YACA,aACA,gBACA,mBACA,WACA,aACA,WACA,SACA,aACA,WACA,QACA,WACA,UACA,aACA,QACA,YACA,YACA,WACA,eACA,SACA,eACA,eACA,YACA,UACA,UACA,WACA,eACA,SACA,WACA,YACA,SACA,QACA,eACA,YACA,UACA,iBACA,aACA,UACA,gBACA,WACA,QACA,UACA,SACA,cACA,SACA,UACA,aACA,SACA,UACA,WACA,UACA,WACA,OACA,OACA,UACA,UACA,WACA,UACA,QACA,gBACA,QACA,cACA,aACA,cACA,WACA,UACA,UACA,WACA,UACA,WACA,WACA,QACA,mBACA,YACA,aACA,UACA,YACA,YACA,WACA,aACA,ICvKIC,EAAc,CAAC,GAAI,MAAO,MAAO,MAAO,MAAO,OAE/CC,EAAgB,SAACC,GACrB,IAAMC,EAAmB,GASzB,OARaH,EAAYI,KAAI,SAACC,GAAD,OAAYH,EAAOG,KAC3CC,SAAQ,SAACC,GACZ,IAAMC,EAAYC,IAAWF,QACXG,IAAdF,GACFL,EAAOQ,KAAKH,MAITL,GAGHS,EAAc,SAACC,GACnB,OAAOA,EAAOC,QAAQ,MAAO,KAO3BC,EAAgBC,KAAKC,MAAMD,KAAKE,SAAWnB,EAAMoB,QACxCC,EAAkB,WAG7B,OAFAL,IAEOhB,EADPgB,GAAgChB,EAAMoB,SAI3BE,EAA+B,WAE1C,IADA,IAAIC,EAAYF,IAC2B,IAApCnB,EAAcqB,GAAWH,QAC9BG,EAAYF,IAEd,OAAOE,GCtCM,MAA0B,oCCA1B,MAA0B,sC,OCgBpBC,E,kDAEnB,WAAYC,GAAe,IAAD,8BACxB,cAAMA,IAMRC,cAAgB,SAACC,GACf,EAAKC,SAAS,CACZC,MAAOF,EAAEG,OAAOC,MAAMC,iBATA,EAa1BC,aAAe,SAACN,GACdA,EAAEO,iBAEF,IHZkC/B,EGY5BgC,GHZ4BhC,EGYI,EAAKsB,MAAMW,SHX5ClC,EAAcC,GAAME,IAAIQ,IGYvBwB,EAAYF,EAAQG,SAAS,EAAKC,MAAMV,OAE9C,EAAKD,SAAS,CAACO,UAASE,eAnBA,EAsB1BG,YAAc,WAAO,IAAD,EAClB,EAAKf,MAAMgB,SACX,EAAKb,SAAS,CACZO,aAASxB,EACTkB,MAAO,GACPQ,eAAW1B,IAIb,UAAA+B,SAASC,eAAe,gBAAxB,SAAkCC,SA/BV,EAkC1BC,cAAgB,WACd,QAA2BlC,IAAvB,EAAK4B,MAAMJ,QAAf,CAIA,GAAkC,IAA9B,EAAKI,MAAMJ,QAAQf,OACrB,OAAQ,0DAGV,IAAI0B,EAAOC,EACPC,EAAM,YAMV,OAL6B,IAAzB,EAAKT,MAAMF,YACbS,EAAOG,EACPD,EAAM,WAIN,gCACE,qBAAKE,GAAG,iBAAiBC,IAAKL,EAAME,IAAKA,IACzC,yCACC,EAAKT,MAAMJ,QAAQ9B,KAAI,SAAC+C,GAAD,OACtB,6BAAeA,GAANA,WAvDS,EA6D1BC,OAAS,WACP,OACE,sBAAKC,UAAU,OAAf,UACE,uBAAMC,SAAU,EAAKtB,aAArB,UAEE,4DAC0B,EAAKR,MAAMW,SADrC,KACiD,IACjD,uBAAOc,GAAG,QAAQM,WAAW,EAAMzB,MAAO,EAAKQ,MAAMV,MAAO4B,SAAU,EAAK/B,mBAG3E,uBAAOgC,KAAK,SAAS3B,MAAM,cAE7B,wBAAQ4B,QAAS,EAAKnB,YAAtB,kBACC,EAAKK,oBAxEV,EAAKN,MAAQ,CACXV,MAAO,IAHe,E,UAFM+B,IAAMC,eCNnBC,E,kDAEnB,WAAYrC,GAAe,IAAD,8BACxB,cAAMA,IAMRsC,WAAa,WACX,IAAMC,EAAc1C,IACpB,EAAKM,SAAS,CAACQ,SAAU4B,KATD,EAY1BX,OAAS,WACP,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,CAAMlB,SAAU,EAAKG,MAAMH,SAAUK,OAAQ,EAAKsB,gBAbtD,EAAKxB,MAAQ,CACXH,SAAUd,KAHY,E,UAFKsC,IAAMC,eCIxBI,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASrB,OACP,cAAC,IAAMsB,WAAP,UACE,cAAC,EAAD,MAEFjC,SAASC,eAAe,SAM1BsB,M","file":"static/js/main.8fcb9100.chunk.js","sourcesContent":["export const words = [\n  'Edification',\n  'Intrapreneur',\n  'circumlocution',\n  'Hypozeuxis',\n  'Hireling',\n  'Orogeny',\n  'Deduplication',\n  'Balkanize',\n  'hemogonic',\n  'Brandolini',\n  'motte',\n  'Solipsism',\n  'pensive',\n  'obverse',\n  'speech',\n  'Paralogize',\n  'oblige',\n  'purview',\n  'privy',\n  'Pedagogical',\n  'Hydra',\n  'circumlocution',\n  'Orogeny',\n  'Platitude',\n  'Goodhart',\n  'Luddite',\n  'Slacktivism',\n  'Despotism',\n  'Megalomaniac',\n  'Sadism',\n  'pithy',\n  'Aphorism',\n  'Browbeating',\n  'Brazen',\n  'Catharsis',\n  'anthemic',\n  'phenomenon',\n  'reductionism',\n  'Inordinate',\n  'iconoclast',\n  'reputedly',\n  'spoonerism',\n  'astroturf',\n  'impunity',\n  'extrajudicial',\n  'beget',\n  'grim',\n  'sardonic',\n  'Solipsism',\n  'pensive',\n  'sonder',\n  'indignation',\n  'etude',\n  'affectation',\n  'Qualia',\n  'Cosmopolitan',\n  'grandstand',\n  'proselytize',\n  'gaudy',\n  'technobabble',\n  'whataboutism',\n  'Kafkatrap',\n  'exasperating',\n  'paraprosdokian',\n  'Witticism',\n  'vindictive',\n  'innocuous',\n  'pejorative',\n  'poindexter',\n  'tautology',\n  'prostrate',\n  'palpable',\n  'insidious',\n  'voluntourism',\n  'charity mugger',\n  'conniving',\n  'Stuxnet',\n  'Durometer',\n  'Wordplay',\n  'muse',\n  'jilt',\n  'obstinate',\n  'steganogrophy',\n  'Streisand Effect',\n  'obsequious',\n  'concubine',\n  'conscientiousness',\n  'Multiple Discovery',\n  'Analog hole',\n  'neologism',\n  'palliative',\n  'countermelody',\n  'consumer surplus',\n  'disabuse',\n  'pejorative',\n  'honeypot',\n  'arrear',\n  'apothecary',\n  'dominant',\n  'revel',\n  'begrudge',\n  'indulge',\n  'panopticon',\n  'PRISM',\n  'exonerate',\n  'Apophenia',\n  'admonish',\n  'parsimonious',\n  'facile',\n  'Bikeshedding',\n  'Unscrupulous',\n  'eponymous',\n  'ennoble',\n  'matador',\n  'monogram',\n  'zettelkasten',\n  'liason',\n  'eloquent',\n  'contrived',\n  'fickle',\n  'dregs',\n  'presumptuous',\n  'onosecond',\n  'chagrin',\n  'existentialism',\n  'apocryphal',\n  'kindrid',\n  'disillusioned',\n  'namesake',\n  'banal',\n  'pompous',\n  'solemn',\n  'pontificate',\n  'strait',\n  'Demonym',\n  'gregarious',\n  'racket',\n  'lexicon',\n  'glossary',\n  'equinox',\n  'solstice',\n  'glib',\n  'ipso',\n  'reverie',\n  'hyponym',\n  'hypernym',\n  'lampoon',\n  'Nomic',\n  'sanctimonious',\n  'libel',\n  'titillating',\n  'enthusiast',\n  'titillating',\n  'galavant',\n  'smitten',\n  'Bedouin',\n  'allusive',\n  'oblique',\n  'innuendo',\n  'fungible',\n  'rebus',\n  'extemporaneously',\n  'Gramogram',\n  'outpatient',\n  'dubious',\n  'diacritic',\n  'allophone',\n  'retronym',\n  'tangential',\n  '',\n];","import { dictionary } from 'cmu-pronouncing-dictionary'\nimport { words } from './words';\n\nconst cmuSuffixes = ['', '(1)', '(2)', '(3)', '(4)', '(5)'];\n\nconst phonesForWord = (word: string): string[] => {\n  const result: string[] = [];\n  const keys = cmuSuffixes.map((suffix) => word + suffix);\n  keys.forEach((key) => {\n    const dictEntry = dictionary[key];\n    if (dictEntry !== undefined) {\n      result.push(dictEntry);\n    }\n  });\n\n  return result;\n};\n\nconst stripAccent = (phones: string) => {\n  return phones.replace(/\\d/g, '');\n}\n\nexport const strippedPhonesForWord = (word: string): string[] => {\n  return phonesForWord(word).map(stripAccent);\n}\n\nlet quizWordIndex = Math.floor(Math.random() * words.length);\nexport const getNextQuizWord = (): string => {\n  quizWordIndex++;\n  quizWordIndex = quizWordIndex % words.length;\n  return words[quizWordIndex];\n};\n\nexport const getNextQuizWordThatHasPhones = (): string => {\n  let candidate = getNextQuizWord();\n  while (phonesForWord(candidate).length === 0) {\n    candidate = getNextQuizWord();\n  }\n  return candidate;\n}\n","export default __webpack_public_path__ + \"static/media/correct.138c460c.png\";","export default __webpack_public_path__ + \"static/media/incorrect.aa2ade06.png\";","import React from 'react';\nimport { strippedPhonesForWord } from './util';\nimport correctIcon from './assets/correct.png';\nimport incorrectIcon from './assets/incorrect.png';\n\ninterface Props {\n  quizWord: string;\n  onNext: () => void;\n}\n\ninterface State {\n  answers?: string[];\n  guess: string;\n  isCorrect?: boolean;\n}\n\nexport default class Quiz extends React.PureComponent<Props, State> {\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      guess: '',\n    }\n  }\n\n  onChangeGuess = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      guess: e.target.value.toUpperCase()\n    });\n  }\n\n  handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    const answers = strippedPhonesForWord(this.props.quizWord);\n    const isCorrect = answers.includes(this.state.guess);\n\n    this.setState({answers, isCorrect});\n  }\n\n  onClickNext = () => {\n    this.props.onNext();\n    this.setState({\n      answers: undefined,\n      guess: '',\n      isCorrect: undefined,\n    });\n\n    // Hacky not using ref\n    document.getElementById('guess')?.focus()\n  }\n\n  renderAnswers = () => {\n    if (this.state.answers === undefined) {\n      return;\n    }\n\n    if (this.state.answers.length === 0) {\n      return (<div>quizWord does not exist</div>);\n    }\n\n    let icon = incorrectIcon;\n    let alt = 'incorrect';\n    if (this.state.isCorrect === true) {\n      icon = correctIcon\n      alt = 'correct';\n    }\n\n    return (\n      <div>\n        <img id=\"isCorrectImage\" src={icon} alt={alt} />\n        <h3>Answers</h3>\n        {this.state.answers.map((ans) => (\n          <li key={ans}>{ans}</li>\n        ))}\n      </div>\n    )\n  }\n\n  render = () => {\n    return (\n      <div className=\"Quiz\">\n        <form onSubmit={this.handleSubmit} >\n\n          <label>\n            Enter the Arpabet for \"{this.props.quizWord}\":{\" \"}\n          <input id=\"guess\" autoFocus={true} value={this.state.guess} onChange={this.onChangeGuess}></input>\n          </label>\n\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n        <button onClick={this.onClickNext}>Next</button>\n        {this.renderAnswers()}\n      </div>\n    );\n  }\n}","import React from 'react';\nimport './App.css';\nimport Quiz from './Quiz';\nimport { getNextQuizWordThatHasPhones } from './util';\n\ninterface Props {}\ninterface State {\n  quizWord: string;\n}\n\nexport default class App extends React.PureComponent<Props, State> {\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      quizWord: getNextQuizWordThatHasPhones(),\n    };\n  }\n\n  onNextWord = () => {\n    const newQuizWord = getNextQuizWordThatHasPhones();\n    this.setState({quizWord: newQuizWord});\n  }\n\n  render = () => {\n    return (\n      <div className=\"App\">\n        <Quiz quizWord={this.state.quizWord} onNext={this.onNextWord} />\n      </div>\n    );\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}